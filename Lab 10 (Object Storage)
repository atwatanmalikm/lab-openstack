Lab 10. Konfigurasi Swift Object Storage

(controller node)

1. Source admin kredensial
-->> source admin-openrc

2. Membuat swift identity service (user, admin role, service entity)
User :
-->> openstack user create --domain default --password-prompt swift
*Password : swiftPass

Admin role :
-->> openstack role add --project service --user swift admin

Service entity :
-->> openstack service create --name swift \
> --description "OpenStack Object Storage" object-store

3. Membuat service API endpoints
-->> openstack endpoint create --region RegionOne \
> object-store public http://controller:8080/v1/AUTH_%\(project_id\)s

-->> openstack endpoint create --region RegionOne \
> object-store internal http://controller:8080/v1/AUTH_%\(project_id\)s

-->> openstack endpoint create --region RegionOne \
> object-store admin http://controller:8080/v1

4. Instal package 
-->> sudo su
-->> apt-get install swift swift-proxy python-swiftclient python-keystoneclient python-keystonemiddleware memcached

5. Membuat direktori swift
-->> mkdir /etc/swift

6. Pull file proxy service configuration dari Object storage repository
-->> curl -o /etc/swift/proxy-server.conf https://opendev.org/openstack/swift/raw/branch/stable/rocky/etc/proxy-server.conf-sample

7. Edit proxy-server.conf 
-->> vim /etc/swift/proxy-server.conf
Sesuaikan :
-> [DEFAULT]
bind_port = 8080
user = swift
swift_dir = /etc/swift

-> [pipeline:main]
*Hapus tempurl dan tempauth
pipeline = catch_errors gatekeeper healthcheck proxy-logging cache container_sync bulk ratelimit authtoken keystoneauth container-quotas account-quotas slo dlo versioned_writes proxy-logging proxy-server

-> [app:proxy-server]
use = egg:swift#proxy
account_autocreate = True

-> [filter:keystoneauth]
use = egg:swift#keystoneauth
operator_roles = admin,user

-> [filter:authtoken]
paste.filter_factory = keystonemiddleware.auth_token:filter_factory
www_authenticate_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_id = default
user_domain_id = default
project_name = service
username = swift
password = swiftPass
delay_auth_decision = True

-> [filter:cache]
use = egg:swift#memcache
memcache_servers = controller:11211


===========================================================================
(store1 dan store2 node)

1. Instal package
-->> sudo su
-->> apt-get install xfsprogs rsync

2. Format partisi /dev/sdb dan /dev/sdc menjadi XFS
-->> mkfs.xfs /dev/sdb
-->> mkfs.xfs /dev/sdc

3. Membuat struktur mount point directory
-->> mkdir -p /srv/node/sdb
-->> mkdir -p /srv/node/sdc

4. Tambahkan di paling bawah file /etc/fstab
-->> vim /etc/fstab
Sesuaikan :
/dev/sdb /srv/node/sdb xfs noatime,nodiratime,nobarrier,logbufs=8 0 2
/dev/sdc /srv/node/sdc xfs noatime,nodiratime,nobarrier,logbufs=8 0 2

5. Mount device
-->> mount /srv/node/sdb
-->> mount /srv/node/sdc

6. Membuat dan menambahkan isi ke dalam file /etc/rsyncd.conf
-->> vim /etc/rsyncd.conf
Sesuaikan :
uid = swift
gid = swift
log file = /var/log/rsyncd.log
pid file = /var/run/rsyncd.pid
address = 10.0.0.51 (store1)         / address = 10.0.0.52 (store2)

[account]
max connections = 2
path = /srv/node/
read only = False
lock file = /var/lock/account.lock

[container]
max connections = 2
path = /srv/node/
read only = False
lock file = /var/lock/container.lock

[object]
max connections = 2
path = /srv/node/
read only = False
lock file = /var/lock/object.lock

7. Edit /etc/default/rsync
-->> vim /etc/default/rsync
Sesuaikan :
RSYNC_ENABLE=true

8. Start rsync service
-->> service rsync start

9. Install package
-->> apt-get install swift swift-account swift-container swift-object

10. Pull accounting, container, object service configuration files dari Object storage repositori
-->> curl -o /etc/swift/account-server.conf https://opendev.org/openstack/swift/raw/branch/stable/rocky/etc/account-server.conf-sample

-->> curl -o /etc/swift/container-server.conf https://opendev.org/openstack/swift/raw/branch/stable/rocky/etc/container-server.conf-sample

-->> curl -o /etc/swift/object-server.conf https://opendev.org/openstack/swift/raw/branch/stable/rocky/etc/object-server.conf-sample

11. Edit /etc/swift/account-server.conf
-->> vim /etc/swift/account-server.conf
Sesuaikan :
-->> [DEFAULT]
bind_ip = 10.0.0.51         (store1)     / bind_ip = 10.0.0.52         (store2)
bind_port = 6202
user = swift
swift_dir = /etc/swift
devices = /srv/node
mount_check = True

-->> [pipeline:main]
pipeline = healthcheck recon account-server

-->> [filter:recon]
use = egg:swift#recon
recon_cache_path = /var/cache/swift
 
12. Edit /etc/swift/container-server.conf
-->> vim /etc/swift/container-server.conf
Sesuaikan : 
-->> [DEFAULT]
bind_ip = 10.0.0.51         (store1)     / bind_ip = 10.0.0.52         (store2)
bind_port = 6201
user = swift
swift_dir = /etc/swift
devices = /srv/node
mount_check = True

-->> [pipeline:main]
pipeline = healthcheck recon container-server

-->> [filter:recon]
use = egg:swift#recon
recon_cache_path = /var/cache/swift

13. Edit /etc/swift/object-server.conf
-->> vim /etc/swift/object-server.conf
Sesuaikan :
-->> [DEFAULT]
bind_ip = 10.0.0.51         (store1)     / bind_ip = 10.0.0.52         (store2)
bind_port = 6200
user = swift
swift_dir = /etc/swift
devices = /srv/node
mount_check = True

-->> [pipeline:main]
pipeline = healthcheck recon object-server

-->> [filter:recon]
use = egg:swift#recon
recon_cache_path = /var/cache/swift
recon_lock_path = /var/lock

14.Mengatur kepemilikan mount point directory structure
-->> chown -R swift:swift /srv/node

15. Membuat direktori recon dan atur kepemilikannya 
-->> mkdir -p /var/cache/swift
-->> chown -R root:swift /var/cache/swift
-->> chmod -R 775 /var/cache/swift


===========================================================================
(controller node)
Membuat ring builder(initial account, container, object ring) untuk menentukan dan menggunakan storage architecture.

MEMBUAT ACCOUNT RING (maintaining list container) 
1. Masuk ke /etc/swift
-->> sudo su
-->> cd /etc/swift

2. Membuat base account.builder file
-->> swift-ring-builder account.builder create 10 3 1

3. Menambahkan storage node(store 1 & store 2) ke ring
store1 :
-->> swift-ring-builder account.builder \
> add --region 1 --zone 1 --ip 10.0.0.51 --port 6202 --device sdb --weight 100

-->> swift-ring-builder account.builder \
> add --region 1 --zone 1 --ip 10.0.0.51 --port 6202 --device sdc --weight 100

store2 :
-->> swift-ring-builder account.builder \
> add --region 1 --zone 1 --ip 10.0.0.52 --port 6202 --device sdb --weight 100

-->> swift-ring-builder account.builder \
> add --region 1 --zone 1 --ip 10.0.0.52 --port 6202 --device sdc --weight 100

4. Verifikasi isi ring
-->> swift-ring-builder account.builder

5. Rebalance ring 
-->> swift-ring-builder account.builder rebalance



MEMBUAT CONTAINER RING (maintaining list object)
1. Membuat base container.builder file 
-->> swift-ring-builder container.builder create 10 3 1

2. Menambahkan storage node(store 1 & store 2) ke ring
store1 :
-->> swift-ring-builder container.builder \
> add --region 1 --zone 1 --ip 10.0.0.51 --port 6201 --device sdb --weight 100

-->> swift-ring-builder container.builder \
> add --region 1 --zone 1 --ip 10.0.0.51 --port 6201 --device sdc --weight 100

store2 :
-->> swift-ring-builder container.builder \
> add --region 1 --zone 1 --ip 10.0.0.52 --port 6201 --device sdb --weight 100

-->> swift-ring-builder container.builder \
> add --region 1 --zone 1 --ip 10.0.0.52 --port 6201 --device sdc --weight 100

3. Verifikasi isi ring
-->> swift-ring-builder container.builder

4. Rebalance ring 
-->> swift-ring-builder container.builder rebalance


MEMBUAT OBJECT RING (maintaining list object location di local devices)
1. Membuat base container.builder file 
-->> swift-ring-builder object.builder create 10 3 1

2. Menambahkan storage node(store 1 & store 2) ke ring
store1 :
-->> swift-ring-builder object.builder \
> add --region 1 --zone 1 --ip 10.0.0.51 --port 6200 --device sdb --weight 100

-->> swift-ring-builder object.builder \
> add --region 1 --zone 1 --ip 10.0.0.51 --port 6200 --device sdc --weight 100

store2 :
-->> swift-ring-builder object.builder \
> add --region 1 --zone 1 --ip 10.0.0.52 --port 6200 --device sdb --weight 100

-->> swift-ring-builder object.builder \
> add --region 1 --zone 1 --ip 10.0.0.52 --port 6200 --device sdc --weight 100

4. Verifikasi isi ring
-->> swift-ring-builder object.builder

5. Rebalance ring 
-->> swift-ring-builder object.builder rebalance


DISTRIBUSI RING CONFIGURATION FILE KE SETIAP STORAGE NODE (store1 & store2)
Ring configuration file :
1. account.ring.gz
2. container.ring.gz
3. object.ring.gz

1. Cek file di /etc/swift pada controller node
-->> ls

2. Copy ring configuration file ke direktori /etc/swift pada setiap storage node menggunakan scp command
(controller node)
-->> cp *.gz /home/ibnmahar/
-->> cd /home/ibnmahar
-->> chown ibnmahar.ibnmahar /home/ibnmahar/*.gz
-->> exit
-->> scp *.gz store1:/home/ibnmahar
-->> scp *.gz store2:/home/ibnmahar


===========================================================================
(store1 & store2 node)
-->> sudo su
-->> cd /home/ibnmahar
-->> cp *.gz /etc/swift
Cek :
-->> cd /etc/swift 
-->> ls


===========================================================================
(controller node)

FINALISASI

1. Pull file /etc/swift/swift.conf dari object storage repository
-->> sudo su
-->> curl -o /etc/swift/swift.conf \
> https://opendev.org/openstack/swift/raw/branch/stable/rocky/etc/swift.conf-sample

2. Edit /etc/swift/swift.conf
-->> vim /etc/swift/swift.conf
Sesuaikan :
-> [swift-hash] 
swift_hash_path_suffix = tspSecret
swift_hash_path_prefix = tspSecret

-> [storage-policy:0]
name = Policy-0
default = yes

3. Copy swift.conf ke direktori /etc/swift pada setiap storage node
(controller node)
-->> cd /etc/swift
-->> cp swift.conf /home/ibnmahar/
-->> cd /home/ibnmahar
-->> chown ibnmahar.ibnmahar /home/ibnmahar/swift.conf
-->> exit
-->> scp swift.conf store1:/home/ibnmahar
-->> scp swift.conf store2:/home/ibnmahar


===========================================================================
(store1 & store2 node)
-->> sudo su
-->> cd /home/ibnmahar
-->> cp swift.conf /etc/swift
Cek :
-->> cd /etc/swift 
-->> ls


4. Mengatur kepemilikan file pada setiap node (controller, store1, store2)
-->> chown -R root:swift /etc/swift
-->> ls -l

5. Restart object storage proxy service pada controller node
-->> service memcached restart
-->> service swift-proxy restart

6. Start object storage service pada storage node(store1 & store2)
-->> swift-init all start

7. Cek Dashboard
-> Membuat container
-> Membuat folder
-> Klik folder -> upload images (simbol disamping +Folder) 

